package designmodel.template;

/**
 * 
* @ClassName: Client 
* @Description: 模板方法：定义一个操作的算法框架
* 对于应用中多处相同处理逻辑和复杂的功能，可以封装成模板
* 模版方法模式的结构
*      模版方法模式由一个抽象类和一个（或一组）实现类通过继承结构组成，抽象类中的方法分为三种：
*	抽象方法：父类中只声明但不加以实现，而是定义好规范，然后由它的子类去实现。（公共业务逻辑组件）
*	模版方法：由抽象类声明并加以实现。一般来说，模版方法调用抽象方法来完成主要的逻辑功能（公共业务逻辑模块），
*			并且，模版方法大多会定义为final类型，指明主要的逻辑功能在子类中不能被重写。
*	钩子方法：由抽象类声明并加以实现。但是子类可以去扩展，子类可以通过扩展钩子方法来影响模版方法的逻辑（isAlerm方法）。
*	一般来说，抽象类中的模版方法是不易反生改变的部分，而抽象方法是容易反生变化的部分，
*	因此通过增加实现类一般可以很容易实现功能的扩展，符合开闭原则。
* 
* @author lcy
* @date 2017年11月13日 上午10:51:40 
*  
 */

public class Client {

	public static void main(String[] args) {
		AbstractHermerModel  model  = new ConcreteHermerModel(); 
		model.run();
	}

}
